@model LibraryX.Models.ErrorViewModel
@{
    ViewData["Title"] = Model.HasCustomError ? Model.ErrorTitle : "Error";
}

<div class="container my-5">
    <div class="bg-white p-5 rounded-lg shadow-lg">
        @if (Model.HasCustomError)
        {
            <h1 class="text-danger">@Model.ErrorTitle</h1>
            <h2 class="text-danger">@Model.ErrorMessage</h2>
            
            @if (!string.IsNullOrEmpty(Model.SuggestedAction))
            {
                <div class="alert alert-info mt-4">
                    <p><strong>Suggested Action:</strong> @Model.SuggestedAction</p>
                    
                    @if (Model.SuggestedAction.Contains("Sign In"))
                    {
                        <a class="btn btn-primary mt-3" href="/Identity/Account/Login">Sign In</a>
                    }
                </div>
            }
        }
        else
        {
            <h1 class="text-danger">Error.</h1>
            <h2 class="text-danger">An error occurred while processing your request.</h2>
        }

        @if (Model.ShowRequestId)
        {
            <p class="mt-4">
                <strong>Request ID:</strong> <code>@Model.RequestId</code>
            </p>
        }

        <div class="mt-4">
            <a href="/" class="btn btn-outline-primary">Return to Home Page</a>
        </div>

        @if (!Model.HasCustomError)
        {
            <div class="card mt-4 bg-light">
                <div class="card-body">
                    <h3>Development Mode</h3>
                    <p>
                        Swapping to <strong>Development</strong> environment will display more detailed information about the error that occurred.
                    </p>
                    <p>
                        <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
                        It can result in displaying sensitive information from exceptions to end users.
                        For local debugging, enable the Development environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
                        and restarting the app.
                    </p>
                </div>
            </div>
        }
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>
