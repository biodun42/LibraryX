@model OpenLibraryCatalogViewModel
@{
    ViewData["Title"] = "OpenLibrary Catalog";
    
    // Helper method to generate book detail links consistently
    string GetBookDetailUrl(string bookKey)
    {
        // Remove leading "/works/" if present, as our controller action expects just the key portion
        string key = bookKey;
        if (bookKey.StartsWith("/works/"))
        {
            key = bookKey.Substring(7);
        }
        
        return Url.Action("OpenLibraryDetail", "Home", new { 
            key = key, 
            viewMode = Model.ViewMode, 
            searchQuery = Model.SearchQuery, 
            category = Model.SelectedCategory, 
            page = Model.CurrentPage 
        });
    }
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-4" role="alert">
        <div class="flex">
            <div class="flex-shrink-0">
                <i class="fas fa-exclamation-circle text-red-400" aria-hidden="true"></i>
            </div>
            <div class="ml-3">
                <p class="text-sm text-red-700">
                    @TempData["ErrorMessage"]
                </p>
            </div>
            <div class="ml-auto pl-3">
                <div class="-mx-1.5 -my-1.5">
                </div>
            </div>
        </div>
    </div>
}

<!-- Hero Section -->
<div class="relative bg-gradient-to-r from-primary-900 to-primary-800 overflow-hidden">
    <div class="absolute inset-0">
        <svg class="absolute bottom-0 left-0 transform translate-x-80 -translate-y-20 lg:translate-x-20 xl:-translate-y-20" width="404" height="384" fill="none" viewBox="0 0 404 384">
            <defs>
                <pattern id="openlibrary-pattern-1" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse">
                    <rect x="0" y="0" width="4" height="4" fill="rgba(255, 255, 255, 0.1)" />
                </pattern>
            </defs>
            <rect width="404" height="384" fill="url(#openlibrary-pattern-1)" />
        </svg>
        <svg class="absolute top-0 right-0 opacity-50" width="404" height="384" fill="none" viewBox="0 0 404 384">
            <defs>
                <pattern id="openlibrary-pattern-2" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse">
                    <rect x="0" y="0" width="4" height="4" fill="rgba(255, 255, 255, 0.1)" />
                </pattern>
            </defs>
            <rect width="404" height="384" fill="url(#openlibrary-pattern-2)" />
        </svg>
    </div>
    <div class="relative max-w-9xl mx-auto py-10 px-2 sm:py-20 sm:px-4 lg:px-8">
        <div class="text-center">
            <h1 class="text-3xl font-extrabold tracking-tight text-white sm:text-4xl lg:text-5xl">OpenLibrary Catalog</h1>
            <p class="mt-4 max-w-3xl mx-auto text-lg text-primary-200">
                Explore millions of free books from the Internet Archive's Open Library
            </p>
            
            <!-- Catalog View Toggle -->
            <div class="mt-6 inline-flex bg-primary-700/50 backdrop-blur-sm rounded-lg p-1">
                <a href="@Url.Action("OpenLibrary", new { viewMode = "all" })" 
                   class="px-4 py-2 rounded-md text-sm font-medium @(Model.ViewMode == "all" ? "bg-primary-600 text-white" : "text-primary-200 hover:text-white")">
                   All Books
                </a>
                <a href="@Url.Action("OpenLibrary", new { viewMode = "fiction" })" 
                   class="px-4 py-2 rounded-md text-sm font-medium @(Model.ViewMode == "fiction" ? "bg-primary-600 text-white" : "text-primary-200 hover:text-white")">
                   Fiction
                </a>
                <a href="@Url.Action("OpenLibrary", new { viewMode = "nonfiction" })" 
                   class="px-4 py-2 rounded-md text-sm font-medium @(Model.ViewMode == "nonfiction" ? "bg-primary-600 text-white" : "text-primary-200 hover:text-white")">
                   Non-Fiction
                </a>
            </div>
        </div>
        
        <!-- Advanced Search Bar -->
        <div class="mt-10 max-w-4xl mx-auto px-4">
            <form asp-action="OpenLibrary" method="get" class="w-full flex flex-col">
                <input type="hidden" name="viewMode" value="@Model.ViewMode">
                
                <!-- Main Search Area -->
                <div class="w-full rounded-2xl bg-white/10 backdrop-blur-md shadow-xl overflow-hidden border border-white/20 hover:border-white/30 transition-all duration-300">
                    <!-- Search Input -->
                    <div class="flex flex-col md:flex-row">
                        <div class="flex-grow p-3 md:p-4">
                            <div class="relative">
                                <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                    <i class="fas fa-search text-primary-300"></i>
                                </div>
                                <input type="text" name="query" placeholder="Search by title, author, ISBN..." value="@Model.SearchQuery"
                                       class="block w-full pl-10 pr-3 py-2 bg-transparent border-none text-white placeholder-primary-300 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent text-base">
                                @if (!string.IsNullOrEmpty(Model.SearchQuery))
                                {
                                    <div class="absolute inset-y-0 right-0 pr-3 flex items-center cursor-pointer" id="searchClear">
                                        <i class="fas fa-times-circle text-primary-300 hover:text-white"></i>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="md:border-l border-white/20 flex md:flex-row flex-col">
                            <button type="submit" class="flex-none bg-primary-600 hover:bg-primary-7 hover:bg-primary-700 text-white px-6 md:px-8 py-3 md:py-4 text-sm md:text-base font-medium transition-colors duration-300">
                                Search
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Filtering and Results Section -->
<div class="bg-gray-50 min-h-screen">
    <div class="max-w-9xl mx-auto px-2 sm:px-4 lg:px-8 py-4">
        <div class="lg:grid lg:grid-cols-12 lg:gap-4">
            <!-- Filters Sidebar -->
            <div class="lg:col-span-3">
                <div class="bg-white shadow rounded-lg overflow-hidden sticky top-24">
                    <div class="p-4 border-b">
                        <h2 class="font-medium text-lg text-gray-900">Filters</h2>
                        <p class="text-sm text-gray-600">Refine your search</p>
                    </div>
                    <form id="filterForm" asp-action="OpenLibrary" method="get">
                        <input type="hidden" name="viewMode" value="@Model.ViewMode" />
                        
                        <!-- Category Filter -->
                        <div class="p-4 border-b">
                            <h3 class="text-sm font-medium text-gray-700 mb-2">Category</h3>
                            <div class="space-y-2">
                                <label class="inline-flex items-center">
                                    <input type="radio" name="category" value="" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                           @(string.IsNullOrEmpty(Model.SelectedCategory) ? "checked" : "")>
                                    <span class="ml-2 text-sm text-gray-700">All Categories</span>
                                </label>
                                
                                @if (Model.ViewMode != "nonfiction")
                                {
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="fiction" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "fiction" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Fiction</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="fantasy" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "fantasy" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Fantasy</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="science_fiction" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "science_fiction" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Science Fiction</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="mystery" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "mystery" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Mystery</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="romance" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "romance" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Romance</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="classics" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "classics" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Classics</span>
                                    </label>
                                }
                                
                                @if (Model.ViewMode != "fiction")
                                {
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="non-fiction" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "non-fiction" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Non-Fiction</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="biography" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "biography" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Biography</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="history" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "history" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">History</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="science" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "science" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Science</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="self-help" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "self-help" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Self-Help</span>
                                    </label>
                                }
                            </div>
                        </div>
                        
                        <div class="px-4 py-3 bg-gray-50 text-right">
                            <button type="reset" class="px-4 py-2 text-sm text-primary-600 hover:text-primary-800 font-medium">
                                Reset
                            </button>
                            <button type="submit" class="ml-3 px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                                Apply
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            
            <!-- Results Area -->
            <div class="lg:col-span-9 mt-8 lg:mt-0">
                <!-- Results Top Bar -->
                <div class="flex flex-col md:flex-row justify-between items-center mb-6">
                    <div class="text-sm text-gray-600 mb-4 md:mb-0">
                        Showing <span class="font-medium text-gray-900">@(((Model.CurrentPage - 1) * Model.ItemsPerPage) + 1)-@Math.Min(Model.CurrentPage * Model.ItemsPerPage, Model.TotalItems)</span> of 
                        <span class="font-medium text-gray-900">@Model.TotalItems</span> results
                    </div>
                </div>
                
                <!-- Featured Categories -->
                <div class="mb-10">
                    <h2 class="text-xl font-semibold text-gray-900 mb-4">Featured Categories</h2>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-2">
                        <a href="@Url.Action("OpenLibrary", new { category = "fiction", viewMode = Model.ViewMode })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                            <div class="relative h-20 bg-gradient-to-r from-primary-600 to-primary-800 rounded-lg overflow-hidden shadow-md">
                                <div class="absolute inset-0 bg-black opacity-20"></div>
                                <div class="absolute inset-0 flex items-center justify-center">
                                    <span class="text-white font-medium text-lg">Fiction</span>
                                </div>
                            </div>
                        </a>
                        <a href="@Url.Action("OpenLibrary", new { category = "non-fiction", viewMode = Model.ViewMode })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                            <div class="relative h-20 bg-gradient-to-r from-purple-600 to-purple-800 rounded-lg overflow-hidden shadow-md">
                                <div class="absolute inset-0 bg-black opacity-20"></div>
                                <div class="absolute inset-0 flex items-center justify-center">
                                    <span class="text-white font-medium text-lg">Non-Fiction</span>
                                </div>
                            </div>
                        </a>
                        <a href="@Url.Action("OpenLibrary", new { category = "science", viewMode = Model.ViewMode })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                            <div class="relative h-20 bg-gradient-to-r from-blue-600 to-blue-800 rounded-lg overflow-hidden shadow-md">
                                <div class="absolute inset-0 bg-black opacity-20"></div>
                                <div class="absolute inset-0 flex items-center justify-center">
                                    <span class="text-white font-medium text-lg">Science</span>
                                </div>
                            </div>
                        </a>
                        <a href="@Url.Action("OpenLibrary", new { category = "classics", viewMode = Model.ViewMode })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                            <div class="relative h-20 bg-gradient-to-r from-amber-600 to-amber-800 rounded-lg overflow-hidden shadow-md">
                                <div class="absolute inset-0 bg-black opacity-20"></div>
                                <div class="absolute inset-0 flex items-center justify-center">
                                    <span class="text-white font-medium text-lg">Classics</span>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
                
                <!-- New Arrivals Section -->
                @if (string.IsNullOrEmpty(Model.SearchQuery) && Model.NewArrivals.Any())
                {
                    <div class="mb-10 bg-gradient-to-r from-primary-50 to-purple-50 rounded-xl p-2 sm:p-4 shadow-sm">
                        <div class="flex items-center mb-4">
                            <div class="bg-primary-100 rounded-full p-2">
                                <i class="fas fa-book-open text-primary-600 text-xl"></i>
                            </div>
                            <h2 class="ml-3 text-xl font-semibold text-gray-900">Recently Published</h2>
                        </div>
                        <p class="text-gray-600 mb-4">Discover the latest books added to the Open Library collection</p>
                        
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2">
                            @foreach (var book in Model.NewArrivals.Take(4))
                            {
                                <div class="bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow">
                                    <div class="p-2 flex items-center">
                                        <div class="flex-shrink-0 h-16 w-12 bg-gray-200 rounded overflow-hidden">
                                            <img src="@book.SmallCoverUrl" 
                                                 alt="@book.Title" class="h-full w-full object-cover">
                                        </div>
                                        <div class="ml-3">
                                            <h3 class="text-sm font-medium text-gray-900 line-clamp-2">@book.Title</h3>
                                            <p class="text-xs text-gray-500 line-clamp-1">
                                                @book.AuthorsText
                                            </p>                                            <div class="mt-1">
                                                <a href="@GetBookDetailUrl(book.Key)" class="text-xs font-medium text-primary-600 hover:text-primary-800">
                                                    View Details
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                
                <!-- Popular Books Section -->
                @if (string.IsNullOrEmpty(Model.SearchQuery) && Model.PopularBooks.Any())
                {
                    <div class="mb-10 bg-gradient-to-r from-blue-50 to-cyan-50 rounded-xl p-2 sm:p-4 shadow-sm">
                        <div class="flex items-center mb-4">
                            <div class="bg-blue-100 rounded-full p-2">
                                <i class="fas fa-fire text-blue-600 text-xl"></i>
                            </div>
                            <h2 class="ml-3 text-xl font-semibold text-gray-900">Popular Books</h2>
                        </div>
                        <p class="text-gray-600 mb-4">Highly rated and widely read books from the Open Library collection</p>
                        
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2">
                            @foreach (var book in Model.PopularBooks.Take(4))
                            {
                                
                                    <div class="bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow p-2 flex items-center">
                                        <div class="flex-shrink-0 h-16 w-12 bg-gray-200 rounded overflow-hidden">
                                            <img src="@book.SmallCoverUrl" 
                                                 alt="@book.Title" class="h-full w-full object-cover">
                                        </div>
                                        <div class="ml-3">
                                            <h3 class="text-sm font-medium text-gray-900 line-clamp-2">@book.Title</h3>
                                            <p class="text-xs text-gray-500 line-clamp-1">
                                                @book.AuthorsText
                                            </p>                                            <div class="mt-1">
                                                <a href="@GetBookDetailUrl(book.Key)" class="text-xs font-medium text-blue-600 hover:text-blue-800">
                                                    View Details
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                            }
                        </div>
                    </div>
                }
                
                <!-- Search Results -->
                <div class="sm:mb-12">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-2xl font-semibold text-gray-900">
                            @(string.IsNullOrEmpty(Model.SearchQuery) ? "Explore Books" : "Search Results")
                        </h2>
                    </div>
                    
                    @if (Model.SearchResults?.Docs?.Any() == true)
                    {
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-2">
                            @foreach (var book in Model.SearchResults.Docs)
                            {
                                <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow h-full flex flex-col">
                                    <div class="relative pt-[70%] bg-gray-200">
                                        <img src="@book.CoverUrl" 
                                             alt="@book.Title" 
                                             class="absolute inset-0 w-full h-full object-cover">
                                        <div class="absolute top-2 right-2 @(book.IsAvailable ? "bg-green-500" : "bg-amber-500") text-white text-xs font-bold px-2 py-1 rounded">
                                            @(book.IsAvailable ? "Available" : "Limited Access")
                                        </div>
                                    </div>
                                    <div class="p-4 flex-grow flex flex-col">
                                        <h3 class="text-gray-900 font-medium text-lg line-clamp-2">@book.Title</h3>
                                        <p class="text-gray-600 text-sm mt-1 line-clamp-1">
                                            @book.AuthorsText
                                        </p>
                                        <div class="mt-2 flex items-center">
                                            <div class="flex items-center">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (book.AverageRating.HasValue && i <= Math.Floor(book.AverageRating.Value))
                                                    {
                                                        <i class="fas fa-star text-yellow-400"></i>
                                                    }
                                                    else if (book.AverageRating.HasValue && i <= Math.Ceiling(book.AverageRating.Value))
                                                    {
                                                        <i class="fas fa-star-half-alt text-yellow-400"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star text-yellow-400"></i>
                                                    }
                                                }
                                            </div>
                                            <span class="text-xs text-gray-500 ml-1">
                                                @(book.RatingsCount.HasValue ? $"({book.RatingsCount})" : "")
                                            </span>
                                        </div>
                                        <div class="mt-3 flex items-end justify-between mt-auto">
                                            <div>
                                                @if (book.ISBN?.Any() == true)
                                                {
                                                    <span class="text-xs font-medium text-gray-600">
                                                        ISBN: @book.ISBN.FirstOrDefault()
                                                    </span>
                                                }
                                                <p class="text-xs text-gray-500">
                                                    @(book.FirstPublishYear.HasValue ? book.FirstPublishYear.Value : "") 
                                                    @(book.NumberOfPages.HasValue ? $" | {book.NumberOfPages} pages" : "")
                                                </p>                                            </div>
                                            <a href="@GetBookDetailUrl(book.Key)" class="text-primary-600 hover:text-primary-800 text-sm font-medium flex items-center">
                                                <i class="fas fa-book-open mr-1"></i> View Details
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="bg-white shadow rounded-lg p-8 text-center">
                            <div class="flex justify-center">
                                <div class="h-16 w-16 text-gray-400">
                                    <i class="fas fa-search fa-3x"></i>
                                </div>
                            </div>
                            <h3 class="mt-4 text-lg font-medium text-gray-900">No books found</h3>
                            <p class="mt-2 text-sm text-gray-500">
                                Try adjusting your search or filter to find what you're looking for.
                            </p>
                        </div>
                    }
                    
                    <!-- Pagination -->
                    @if (Model.TotalPages > 1)
                    {
                        <div class="mt-12">
                            <div class="flex items-center justify-between">
                                <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                                    <div>
                                        <p class="text-sm text-gray-700">
                                            Showing <span class="font-medium">@(((Model.CurrentPage - 1) * Model.ItemsPerPage) + 1)</span> to 
                                            <span class="font-medium">@Math.Min(Model.CurrentPage * Model.ItemsPerPage, Model.TotalItems)</span> of 
                                            <span class="font-medium">@Model.TotalItems</span> results
                                        </p>
                                    </div>
                                    <div>
                                        <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                                            @if (Model.HasPreviousPage)
                                            {
                                                <a href="@Url.Action("OpenLibrary", new { query = Model.SearchQuery, category = Model.SelectedCategory, page = Model.CurrentPage - 1, viewMode = Model.ViewMode })" 
                                                   class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                                    <span class="sr-only">Previous</span>
                                                    <i class="fas fa-chevron-left h-5 w-5"></i>
                                                </a>
                                            }
                                            
                                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                            {
                                                <a href="@Url.Action("OpenLibrary", new { query = Model.SearchQuery, category = Model.SelectedCategory, page = i, viewMode = Model.ViewMode })" 
                                                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 @(i == Model.CurrentPage ? "bg-primary-600 hover:bg-primary-700 focus:outline-none f text-white" : "bg-white text-gray-700 hover:bg-gray-50") text-sm font-medium">
                                                    @i
                                                </a>
                                            }
                                            
                                            @if (Model.HasNextPage)
                                            {
                                                <a href="@Url.Action("OpenLibrary", new { query = Model.SearchQuery, category = Model.SelectedCategory, page = Model.CurrentPage + 1, viewMode = Model.ViewMode })" 
                                                   class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                                    <span class="sr-only">Next</span>
                                                    <i class="fas fa-chevron-right h-5 w-5"></i>
                                                </a>
                                            }
                                        </nav>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Help Section -->
<section class="bg-gray-100 py-10">
    <div class="max-w-9xl mx-auto px-2 sm:px-4 lg:px-8">
        <div class="text-center">
            <h2 class="text-3xl font-extrabold text-gray-900">About Open Library</h2>
            <p class="mt-4 max-w-2xl mx-auto text-lg text-gray-500">
                Open Library is an open, editable library catalog, building towards a web page for every book ever published.
            </p>
        </div>
        
        <div class="mt-12 grid grid-cols-1 gap-2 sm:grid-cols-2 lg:grid-cols-3">
            <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                <div class="px-6 py-8">
                    <div class="flex items-center justify-center h-12 w-12 rounded-md bg-primary-600 hover:bg-primary-700 text-white mb-5">
                        <i class="fas fa-book"></i>
                    </div>
                    <h3 class="text-lg font-medium text-gray-900">Open Source</h3>
                    <p class="mt-2 text-base text-gray-500">
                        Open Library is a project of the Internet Archive, a 501(c)(3) non-profit, building a digital library of Internet sites and cultural artifacts.
                    </p>
                </div>
            </div>
            
            <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                <div class="px-6 py-8">
                    <div class="flex items-center justify-center h-12 w-12 rounded-md bg-primary-600 hover:bg-primary-700 text-white mb-5">
                        <i class="fas fa-users"></i>
                    </div>
                    <h3 class="text-lg font-medium text-gray-900">Community Driven</h3>
                    <p class="mt-2 text-base text-gray-500">
                        Anyone can contribute to Open Library. Thousands of volunteers have helped build the catalog and improve the data.
                    </p>
                </div>
            </div>
            
            <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                <div class="px-6 py-8">
                    <div class="flex items-center justify-center h-12 w-12 rounded-md bg-primary-600 hover:bg-primary-700 text-white mb-5">
                        <i class="fas fa-globe"></i>
                    </div>
                    <h3 class="text-lg font-medium text-gray-900">Free Access</h3>
                    <p class="mt-2 text-base text-gray-500">
                        Open Library provides free access to millions of books, many of which can be read online or borrowed digitally.
                    </p>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.querySelector('input[name="query"]');
            const searchClear = document.getElementById('searchClear');
            
            // Search clear button
            if (searchClear) {
                searchClear.addEventListener('click', function() {
                    searchInput.value = '';
                    searchInput.focus();
                });
            }
            
            // Add focus animation to search input
            searchInput.addEventListener('focus', function() {
                this.parentElement.parentElement.parentElement.classList.add('ring-2', 'ring-primary-400');
            });
            
            searchInput.addEventListener('blur', function() {
                this.parentElement.parentElement.parentElement.classList.remove('ring-2', 'ring-primary-400');
            });
        });
    </script>
}
