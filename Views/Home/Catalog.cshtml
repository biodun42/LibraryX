@model CatalogViewModel
@{
    ViewData["Title"] = "Google Books Catalog";
    
    // Helper method to generate book detail links consistently
    string GetBookDetailUrl(string bookId)
    {
        return Url.Action("BookDetail", "Home", new { 
            id = bookId, 
            viewMode = Model.ViewMode,
            searchQuery = Model.SearchQuery,
            category = Model.SelectedCategory,
            page = Model.CurrentPage
        });
    }
}

<!-- Display error messages if any -->
@if (TempData["ErrorMessage"] != null)
{
    <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-4" role="alert">
        <div class="flex">
            <div class="flex-shrink-0">
                <i class="fas fa-exclamation-circle text-red-400" aria-hidden="true"></i>
            </div>
            <div class="ml-3">
                <p class="text-sm text-red-700">
                    @TempData["ErrorMessage"]
                </p>
            </div>
            <div class="ml-auto pl-3">
                <div class="-mx-1.5 -my-1.5">
                    <button onclick="this.parentElement.parentElement.parentElement.remove()" class="inline-flex rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500" aria-label="Dismiss">
                        <span class="sr-only">Dismiss</span>
                        <i class="fas fa-times" aria-hidden="true"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<!-- Hero Section -->
<div class="relative bg-gradient-to-r from-primary-900 to-primary-800 overflow-hidden">
    <div class="absolute inset-0">
        <svg class="absolute bottom-0 left-0 transform translate-x-80 -translate-y-20 lg:translate-x-20 xl:-translate-y-20" width="404" height="384" fill="none" viewBox="0 0 404 384">
            <defs>
                <pattern id="d46db4a2-faf9-4911-a4b4-f7ac6a0bf2e5" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse">
                    <rect x="0" y="0" width="4" height="4" class="text-blue-700" fill="currentColor" />
                </pattern>
            </defs>
            <rect width="404" height="384" fill="url(#d46db4a2-faf9-4911-a4b4-f7ac6a0bf2e5)" />
        </svg>
        <svg class="absolute top-0 right-0 opacity-50" width="404" height="384" fill="none" viewBox="0 0 404 384">
            <defs>
                <pattern id="f210dbf6-a58d-4871-961e-36d5016a0f49" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse">
                    <rect x="0" y="0" width="4" height="4" class="text-primary-600" fill="currentColor" />
                </pattern>
            </defs>
            <rect width="404" height="384" fill="url(#f210dbf6-a58d-4871-961e-36d5016a0f49)" />
        </svg>
    </div>
    <div class="relative max-w-9xl mx-auto py-10 px-2 sm:py-20 sm:px-4 lg:px-8">        <div class="text-center">
            <h1 class="text-3xl font-extrabold tracking-tight text-white sm:text-4xl lg:text-5xl">
                <span class="flex items-center justify-center">
                    <i class="fab fa-google text-3xl mr-3 text-white"></i>
                    Google Books Catalog
                </span>
            </h1>            <p class="mt-4 max-w-3xl mx-auto text-lg text-blue-200">
                @if(Model.ViewMode == "academic")
                {
                    <span>Access millions of academic books from Google's extensive digital library</span>
                }
                else 
                {
                    <span>Discover popular fiction and literature from Google Books' vast collection</span>
                }
            </p>
            
            <!-- Catalog View Toggle -->
            <div class="mt-6 inline-flex bg-primary-700/50 backdrop-blur-sm rounded-lg p-1">
                <a href="@Url.Action("Catalog", new { viewMode = "academic" })" 
                   class="px-4 py-2 rounded-md text-sm font-medium @(Model.ViewMode == "academic" ? "bg-primary-600 text-white" : "text-primary-200 hover:text-white")">
                    <i class="fas fa-graduation-cap mr-2"></i>Academic
                </a>
                <a href="@Url.Action("Catalog", new { viewMode = "fiction" })" 
                   class="px-4 py-2 rounded-md text-sm font-medium @(Model.ViewMode == "fiction" ? "bg-primary-600 text-white" : "text-primary-200 hover:text-white")">
                    <i class="fas fa-book mr-2"></i>Fiction & Novels
                </a>
            </div>
        </div>
        
        <!-- Advanced Search Bar - Redesigned -->
        <div class="mt-10 max-w-4xl mx-auto px-4">
            <form asp-action="Catalog" method="get" class="w-full flex flex-col">
                <input type="hidden" name="viewMode" value="@Model.ViewMode">
                
                <!-- Main Search Area -->
                <div class="w-full rounded-2xl bg-white/10 backdrop-blur-md shadow-xl overflow-hidden border border-white/20 hover:border-white/30 transition-all duration-300">
                    <!-- Search Input -->
                    <div class="flex flex-col md:flex-row">
                        <div class="flex-grow relative">
                            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                <i class="fas fa-search text-primary-300"></i>
                            </div>
                            <input type="text" name="query" placeholder="Search by title, author, or ISBN..." 
                                    value="@Model.SearchQuery"
                                    class="w-full pl-12 pr-4 py-4 md:py-5 bg-transparent border-0 text-white placeholder-primary-200 focus:ring-0 focus:outline-none text-base md:text-lg" 
                                    autocomplete="off">
                            <button type="button" id="searchClear" class="absolute inset-y-0 right-0 pr-4 flex items-center text-primary-300 hover:text-white transition-colors cursor-pointer @(string.IsNullOrEmpty(Model.SearchQuery) ? "hidden" : "")">
                                <i class="fas fa-times-circle"></i>
                            </button>
                        </div>
                        
                        <div class="md:border-l border-white/20 flex md:flex-row flex-col">
                            <!-- Category Dropdown -->
                            <div class="relative group">
                                <select name="category" 
                                        class="appearance-none cursor-pointer py-4 md:py-5 px-6 bg-transparent border-0 text-primary-200 hover:text-white focus:ring-0 focus:outline-none transition-colors md:border-r border-white/20">
                                    <option value="" class="bg-primary-800 text-white">All Categories</option>
                                    @if(Model.ViewMode == "academic") {
                                        <option value="computer science" selected="@(Model.SelectedCategory == "computer science")" class="bg-primary-800 text-white">Computer Science</option>
                                        <option value="engineering" selected="@(Model.SelectedCategory == "engineering")" class="bg-primary-800 text-white">Engineering</option>
                                        <option value="medicine" selected="@(Model.SelectedCategory == "medicine")" class="bg-primary-800 text-white">Medicine</option>
                                        <option value="business" selected="@(Model.SelectedCategory == "business")" class="bg-primary-800 text-white">Business</option>
                                        <option value="science" selected="@(Model.SelectedCategory == "science")" class="bg-primary-800 text-white">Science</option>
                                        <option value="mathematics" selected="@(Model.SelectedCategory == "mathematics")" class="bg-primary-800 text-white">Mathematics</option>
                                        <option value="education" selected="@(Model.SelectedCategory == "education")" class="bg-primary-800 text-white">Education</option>
                                    } else {
                                        <option value="fiction" selected="@(Model.SelectedCategory == "fiction")" class="bg-primary-800 text-white">All Fiction</option>
                                        <option value="fantasy" selected="@(Model.SelectedCategory == "fantasy")" class="bg-primary-800 text-white">Fantasy</option>
                                        <option value="science fiction" selected="@(Model.SelectedCategory == "science fiction")" class="bg-primary-800 text-white">Science Fiction</option>
                                        <option value="mystery" selected="@(Model.SelectedCategory == "mystery")" class="bg-primary-800 text-white">Mystery</option>
                                        <option value="thriller" selected="@(Model.SelectedCategory == "thriller")" class="bg-primary-800 text-white">Thriller</option>
                                        <option value="romance" selected="@(Model.SelectedCategory == "romance")" class="bg-primary-800 text-white">Romance</option>
                                        <option value="historical fiction" selected="@(Model.SelectedCategory == "historical fiction")" class="bg-primary-800 text-white">Historical Fiction</option>
                                    }
                                </select>
                                <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-3 text-primary-300">
                                    <i class="fas fa-chevron-down text-xs"></i>
                                </div>
                            </div>
                            
                            <!-- Search Button -->
                            <button type="submit" 
                                    class="group flex items-center justify-center px-8 py-4 md:py-5 bg-primary-600 hover:bg-primary-500 text-white font-medium transition-all duration-300">
                                <span class="mr-2 group-hover:translate-x-1 transition-transform duration-300">Search</span>
                                <i class="fas fa-arrow-right group-hover:translate-x-2 transition-transform duration-300"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Filtering and Results Section -->
<div class="bg-gray-50 min-h-screen">
    <div class="max-w-9xl mx-auto px-2 sm:px-4 lg:px-8 py-4">
        <div class="lg:grid lg:grid-cols-12 lg:gap-2">
            <!-- Filters Sidebar -->
            <div class="lg:col-span-3">
                <div class="bg-white shadow rounded-lg overflow-hidden sticky top-24">
                    <div class="p-4 border-b">
                        <h2 class="font-medium text-lg text-gray-900">Filters</h2>
                        <p class="text-sm text-gray-600">Refine your search</p>
                    </div>                      <form id="filterForm" asp-action="Catalog" method="get">
                        <input type="hidden" name="viewMode" value="@Model.ViewMode" />
                        
                        <!-- Category Filter -->
                        <div class="p-4 border-b">
                            <h3 class="text-sm font-medium text-gray-700 mb-2">Category</h3>                            <div class="space-y-2">                                <label class="inline-flex items-center">
                                    <input type="radio" name="query" value="" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                           @(string.IsNullOrEmpty(Model.SearchQuery) ? "checked" : "")>
                                    <span class="ml-2 text-sm text-gray-700">All Categories</span>
                                </label>
                                  @if(Model.ViewMode == "academic") {
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="query" value="computer science" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SearchQuery == "computer science" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Computer Science</span>
                                    </label>                                    <label class="inline-flex items-center">
                                        <input type="radio" name="query" value="engineering" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SearchQuery == "engineering" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Engineering</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="query" value="medicine" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SearchQuery == "medicine" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Medicine</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="query" value="business" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SearchQuery == "business" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Business</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="query" value="science" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SearchQuery == "science" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Science</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="query" value="research methodology" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SearchQuery == "research methodology" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Research Methods</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="query" value="academic writing" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SearchQuery == "academic writing" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Academic Writing</span>
                                    </label>
                                } else {
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="fantasy" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "fantasy" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Fantasy</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="science fiction" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "science fiction" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Science Fiction</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="mystery" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "mystery" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Mystery</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="thriller" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "thriller" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Thriller</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="romance" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "romance" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Romance</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="classics" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "classics" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Classics</span>
                                    </label>
                                    <label class="inline-flex items-center">
                                        <input type="radio" name="category" value="historical fiction" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500" 
                                               @(Model.SelectedCategory == "historical fiction" ? "checked" : "")>
                                        <span class="ml-2 text-sm text-gray-700">Historical Fiction</span>
                                    </label>
                                }
                            </div>
                        </div>
                        
                        <!-- Format Filter -->
                        <div class="p-4 border-b">
                            <h3 class="text-sm font-medium text-gray-700 mb-2">Format</h3>
                            <div class="space-y-2">
                                <label class="inline-flex items-center">
                                    <input type="checkbox" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500">
                                    <span class="ml-2 text-sm text-gray-700">E-book</span>
                                </label>
                                <label class="inline-flex items-center">
                                    <input type="checkbox" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500">
                                    <span class="ml-2 text-sm text-gray-700">PDF</span>
                                </label>
                                <label class="inline-flex items-center">
                                    <input type="checkbox" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500">
                                    <span class="ml-2 text-sm text-gray-700">EPUB</span>
                                </label>
                            </div>
                        </div>
                        
                        <div class="px-4 py-3 bg-gray-50 text-right">
                            <button type="reset" class="px-4 py-2 text-sm text-primary-600 hover:text-primary-800 font-medium">
                                Reset
                            </button>
                            <button type="submit" class="ml-3 px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                                Apply
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            
            <!-- Results Area -->
            <div class="lg:col-span-9 mt-8 lg:mt-0">
                <!-- Results Top Bar -->
                <div class="flex flex-col md:flex-row justify-between items-center mb-6">
                    <div class="text-sm text-gray-600 mb-4 md:mb-0">
                        Showing <span class="font-medium text-gray-900">@(((Model.CurrentPage - 1) * Model.ItemsPerPage) + 1)-@Math.Min(Model.CurrentPage * Model.ItemsPerPage, Model.TotalItems)</span> of 
                        <span class="font-medium text-gray-900">@Model.TotalItems</span> results
                    </div>
                   
                </div>
                  <!-- Featured Categories -->
                <div class="mb-10">
                    <h2 class="text-xl font-semibold text-gray-900 mb-4">Featured Categories</h2>
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-2">                        @if(Model.ViewMode == "academic") {
                            <a href="@Url.Action("Catalog", new { query = "computer science", viewMode = "academic" })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                                <div class="relative h-20 bg-gradient-to-r from-blue-600 to-blue-800 rounded-lg overflow-hidden shadow-md">
                                    <div class="absolute inset-0 bg-black opacity-20"></div>
                                    <div class="absolute inset-0 flex items-center justify-center">
                                        <span class="text-white font-medium text-lg">Computer Science</span>
                                    </div>
                                </div>
                            </a>                            <a href="@Url.Action("Catalog", new { query = "engineering", viewMode = "academic" })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                                <div class="relative h-20 bg-gradient-to-r from-green-600 to-green-800 rounded-lg overflow-hidden shadow-md">
                                    <div class="absolute inset-0 bg-black opacity-20"></div>
                                    <div class="absolute inset-0 flex items-center justify-center">
                                        <span class="text-white font-medium text-lg">Engineering</span>
                                    </div>
                                </div>
                            </a>
                            <a href="@Url.Action("Catalog", new { query = "medicine", viewMode = "academic" })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                                <div class="relative h-20 bg-gradient-to-r from-red-600 to-red-800 rounded-lg overflow-hidden shadow-md">
                                    <div class="absolute inset-0 bg-black opacity-20"></div>
                                    <div class="absolute inset-0 flex items-center justify-center">
                                        <span class="text-white font-medium text-lg">Medicine</span>
                                    </div>
                                </div>
                            </a>
                            <a href="@Url.Action("Catalog", new { query = "research methodology", viewMode = "academic" })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                                <div class="relative h-20 bg-gradient-to-r from-purple-600 to-purple-800 rounded-lg overflow-hidden shadow-md">
                                    <div class="absolute inset-0 bg-black opacity-20"></div>
                                    <div class="absolute inset-0 flex items-center justify-center">
                                        <span class="text-white font-medium text-lg">Research Methods</span>
                                    </div>
                                </div>
                            </a>
                        } else {
                            <a href="@Url.Action("Catalog", new { category = "fantasy", viewMode = "fiction" })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                                <div class="relative h-20 bg-gradient-to-r from-primary-600 to-primary-800 rounded-lg overflow-hidden shadow-md">
                                    <div class="absolute inset-0 bg-black opacity-20"></div>
                                    <div class="absolute inset-0 flex items-center justify-center">
                                        <span class="text-white font-medium text-lg">Fantasy</span>
                                    </div>
                                </div>
                            </a>
                            <a href="@Url.Action("Catalog", new { category = "mystery", viewMode = "fiction" })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                                <div class="relative h-20 bg-gradient-to-r from-blue-600 to-blue-800 rounded-lg overflow-hidden shadow-md">
                                    <div class="absolute inset-0 bg-black opacity-20"></div>
                                    <div class="absolute inset-0 flex items-center justify-center">
                                        <span class="text-white font-medium text-lg">Mystery</span>
                                    </div>
                                </div>
                            </a>
                            <a href="@Url.Action("Catalog", new { category = "science fiction", viewMode = "fiction" })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                                <div class="relative h-20 bg-gradient-to-r from-teal-600 to-teal-800 rounded-lg overflow-hidden shadow-md">
                                    <div class="absolute inset-0 bg-black opacity-20"></div>
                                    <div class="absolute inset-0 flex items-center justify-center">
                                        <span class="text-white font-medium text-lg">Science Fiction</span>
                                    </div>
                                </div>
                            </a>
                            <a href="@Url.Action("Catalog", new { category = "classics", viewMode = "fiction" })" class="group transform transition-transform duration-300 hover:-translate-y-1">
                                <div class="relative h-20 bg-gradient-to-r from-amber-600 to-amber-800 rounded-lg overflow-hidden shadow-md">
                                    <div class="absolute inset-0 bg-black opacity-20"></div>
                                    <div class="absolute inset-0 flex items-center justify-center">
                                        <span class="text-white font-medium text-lg">Classics</span>
                                    </div>
                                </div>
                            </a>
                        }
                    </div>                </div>
                
                @if(Model.ViewMode == "academic" && string.IsNullOrEmpty(Model.SearchQuery))
                {
                    <!-- University Student Resources -->
                    <div class="mb-10 bg-gradient-to-r from-primary-50 to-primary-100 rounded-xl p-6 shadow-sm">
                        <div class="flex items-center mb-4">
                            <div class="bg-primary-100 rounded-full p-2">
                                <i class="fas fa-graduation-cap text-primary-600 text-xl"></i>
                            </div>
                            <h2 class="ml-3 text-xl font-semibold text-gray-900">University Student Resources</h2>
                        </div>
                        <p class="text-gray-600 mb-4">Essential academic resources curated for university students. These materials are selected to support your academic success.</p>
                        
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                            <!-- Research Methods Books -->
                            @foreach (var book in Model.ResearchBooks.Take(2))
                            {
                                <div class="bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow">
                                    <div class="p-3 flex items-center">
                                        <div class="flex-shrink-0 h-16 w-12 bg-gray-200 rounded overflow-hidden">
                                            <img src="@(book.VolumeInfo.ImageLinks?.BestAvailableImage ?? "https://via.placeholder.com/48x72?text=No+Cover")" 
                                                 alt="@book.VolumeInfo.Title" class="h-full w-full object-cover">
                                        </div>
                                        <div class="ml-3">
                                            <h3 class="text-sm font-medium text-gray-900 line-clamp-2">@book.VolumeInfo.Title</h3>
                                            <p class="text-xs text-gray-500 line-clamp-1">
                                                @(book.VolumeInfo.Authors != null ? string.Join(", ", book.VolumeInfo.Authors) : "Unknown")
                                            </p>
                                            <div class="mt-1">
                                                <a href="@book.VolumeInfo.PreviewLink" target="_blank" class="text-xs font-medium text-primary-600 hover:text-primary-800">
                                                    View Details
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            
                            <!-- Academic Writing Books -->
                            @foreach (var book in Model.AcademicBooks.Take(2))
                            {
                                <div class="bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow">
                                    <div class="p-3 flex items-center">
                                        <div class="flex-shrink-0 h-16 w-12 bg-gray-200 rounded overflow-hidden">
                                            <img src="@(book.VolumeInfo.ImageLinks?.BestAvailableImage ?? "https://via.placeholder.com/48x72?text=No+Cover")" 
                                                 alt="@book.VolumeInfo.Title" class="h-full w-full object-cover">
                                        </div>
                                        <div class="ml-3">
                                            <h3 class="text-sm font-medium text-gray-900 line-clamp-2">@book.VolumeInfo.Title</h3>
                                            <p class="text-xs text-gray-500 line-clamp-1">
                                                @(book.VolumeInfo.Authors != null ? string.Join(", ", book.VolumeInfo.Authors) : "Unknown")
                                            </p>
                                            <div class="mt-1">
                                                <a href="@book.VolumeInfo.PreviewLink" target="_blank" class="text-xs font-medium text-primary-600 hover:text-primary-800">
                                                    View Details
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                
                @if(Model.ViewMode == "fiction" && string.IsNullOrEmpty(Model.SearchQuery))
                {
                    <!-- Recommended Leisure Reading -->
                    <div class="mb-10 bg-gradient-to-r from-primary-50 to-purple-50 rounded-xl p-6 shadow-sm">
                        <div class="flex items-center mb-4">
                            <div class="bg-primary-100 rounded-full p-2">
                                <i class="fas fa-book-reader text-primary-600 text-xl"></i>
                            </div>
                            <h2 class="ml-3 text-xl font-semibold text-gray-900">Recommended Fiction</h2>
                        </div>
                        <p class="text-gray-600 mb-4">Take a break from studies with these recommended novels - perfect for relaxation and expanding your literary horizons.</p>
                        
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
                            @foreach (var book in Model.FictionBooks.Take(2))
                            {
                                <div class="bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow">
                                    <div class="p-3 flex items-center">
                                        <div class="flex-shrink-0 h-16 w-12 bg-gray-200 rounded overflow-hidden">
                                            <img src="@(book.VolumeInfo.ImageLinks?.BestAvailableImage ?? "https://via.placeholder.com/48x72?text=No+Cover")" 
                                                 alt="@book.VolumeInfo.Title" class="h-full w-full object-cover">
                                        </div>
                                        <div class="ml-3">
                                            <h3 class="text-sm font-medium text-gray-900 line-clamp-2">@book.VolumeInfo.Title</h3>
                                            <p class="text-xs text-gray-500 line-clamp-1">
                                                @(book.VolumeInfo.Authors != null ? string.Join(", ", book.VolumeInfo.Authors) : "Unknown")
                                            </p>
                                            <div class="mt-1">
                                                <a href="@book.VolumeInfo.PreviewLink" target="_blank" class="text-xs font-medium text-primary-600 hover:text-primary-800">
                                                    View Details
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            
                            @foreach (var book in Model.LiteratureBooks.Take(2))
                            {
                                <div class="bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow">
                                    <div class="p-3 flex items-center">
                                        <div class="flex-shrink-0 h-16 w-12 bg-gray-200 rounded overflow-hidden">
                                            <img src="@(book.VolumeInfo.ImageLinks?.BestAvailableImage ?? "https://via.placeholder.com/48x72?text=No+Cover")" 
                                                 alt="@book.VolumeInfo.Title" class="h-full w-full object-cover">
                                        </div>
                                        <div class="ml-3">
                                            <h3 class="text-sm font-medium text-gray-900 line-clamp-2">@book.VolumeInfo.Title</h3>
                                            <p class="text-xs text-gray-500 line-clamp-1">
                                                @(book.VolumeInfo.Authors != null ? string.Join(", ", book.VolumeInfo.Authors) : "Unknown")
                                            </p>
                                            <div class="mt-1">
                                                <a href="@book.VolumeInfo.PreviewLink" target="_blank" class="text-xs font-medium text-primary-600 hover:text-primary-800">
                                                    View Details
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                
                <!-- Search Results -->
                <div class="sm:mb-12">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-2xl font-semibold text-gray-900">
                            @(string.IsNullOrEmpty(Model.SearchQuery) ? "Popular Books" : "Search Results")
                        </h2>
                    </div>
                    
                    @if (Model.SearchResults?.Items?.Any() == true)
                    {
                        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-3">
                            @foreach (var book in Model.SearchResults.Items)
                            {
                                <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow h-full flex flex-col">
                                    <div class="relative pt-[70%] bg-gray-200">
                                        <img src="@(book.VolumeInfo.ImageLinks?.BestAvailableImage ?? "https://via.placeholder.com/128x192?text=No+Cover")" 
                                             alt="@book.VolumeInfo.Title" 
                                             class="absolute inset-0 w-full h-full object-cover">
                                        <div class="absolute top-2 right-2 @(book.IsAvailable ? "bg-green-500" : "bg-amber-500") text-white text-xs font-bold px-2 py-1 rounded">
                                            @(book.IsAvailable ? "Available" : "Limited Access")
                                        </div>
                                    </div>
                                    <div class="p-2 flex-grow flex flex-col">
                                        <h3 class="text-gray-900 font-medium text-lg line-clamp-2">@book.VolumeInfo.Title</h3>
                                        <p class="text-gray-600 text-sm mt-1 line-clamp-1">
                                            @(book.VolumeInfo.Authors != null ? string.Join(", ", book.VolumeInfo.Authors) : "Unknown Author")
                                        </p>
                                        <div class="mt-2 flex items-center">
                                            <div class="flex items-center">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (book.VolumeInfo.AverageRating.HasValue && i <= Math.Floor(book.VolumeInfo.AverageRating.Value))
                                                    {
                                                        <i class="fas fa-star text-yellow-400"></i>
                                                    }
                                                    else if (book.VolumeInfo.AverageRating.HasValue && i <= Math.Ceiling(book.VolumeInfo.AverageRating.Value))
                                                    {
                                                        <i class="fas fa-star-half-alt text-yellow-400"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star text-yellow-400"></i>
                                                    }
                                                }
                                            </div>
                                            <span class="text-xs text-gray-500 ml-1">
                                                @(book.VolumeInfo.RatingsCount.HasValue ? $"({book.VolumeInfo.RatingsCount})" : "")
                                            </span>
                                        </div>
                                        <div class="mt-3 flex items-end justify-between mt-auto">
                                            <div>
                                                @if (book.VolumeInfo.IndustryIdentifiers?.Any() == true)
                                                {
                                                    <span class="text-xs font-medium text-gray-600">
                                                        ISBN: @book.VolumeInfo.IndustryIdentifiers.FirstOrDefault(i => i.Type == "ISBN_13" || i.Type == "ISBN_10")?.Identifier
                                                    </span>
                                                }
                                                <p class="text-xs text-gray-500">
                                                    @book.VolumeInfo.PublishedDate?.Substring(0, Math.Min(4, book.VolumeInfo.PublishedDate.Length)) 
                                                    @(book.VolumeInfo.PageCount.HasValue ? $" | {book.VolumeInfo.PageCount} pages" : "")
                                                </p>
                                            </div>
                                            @if (book.IsAvailable)
                                            {                                                <a href="@Url.Action("BookDetail", new { id = book.Id, viewMode = Model.ViewMode, searchQuery = Model.SearchQuery, category = Model.SelectedCategory, page = Model.CurrentPage })" class="text-primary-600 hover:text-primary-800 text-sm font-medium flex items-center">
                                                    <i class="fas fa-book-open mr-1"></i> View Details
                                                </a>
                                            }
                                            else
                                            {
                                                <button class="text-gray-400 cursor-not-allowed text-sm font-medium flex items-center">
                                                    <i class="fas fa-clock mr-1"></i> Unavailable
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="bg-white shadow rounded-lg p-8 text-center">
                            <div class="flex justify-center">
                                <div class="h-16 w-16 text-gray-400">
                                    <i class="fas fa-search fa-3x"></i>
                                </div>
                            </div>
                            <h3 class="mt-4 text-lg font-medium text-gray-900">No books found</h3>
                            <p class="mt-2 text-sm text-gray-500">
                                Try adjusting your search or filter to find what you're looking for.
                            </p>
                        </div>
                    }
                    
                    <!-- Pagination -->
                    @if (Model.TotalPages > 1)
                    {
                        <div class="mt-12">
                            <div class="flex items-center justify-between">
                                <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                                    <div>
                                        <p class="text-sm text-gray-700">
                                            Showing <span class="font-medium">@(((Model.CurrentPage - 1) * Model.ItemsPerPage) + 1)</span> to 
                                            <span class="font-medium">@Math.Min(Model.CurrentPage * Model.ItemsPerPage, Model.TotalItems)</span> of 
                                            <span class="font-medium">@Model.TotalItems</span> results
                                        </p>
                                    </div>
                                    <div>
                                        <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                                            @if (Model.HasPreviousPage)
                                            {
                                                <a href="@Url.Action("Catalog", new { query = Model.SearchQuery, category = Model.SelectedCategory, page = Model.CurrentPage - 1 })" 
                                                   class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                                    <span class="sr-only">Previous</span>
                                                    <i class="fas fa-chevron-left h-5 w-5"></i>
                                                </a>
                                            }
                                            
                                            @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                                            {
                                                <a href="@Url.Action("Catalog", new { query = Model.SearchQuery, category = Model.SelectedCategory, page = i })" 
                                                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 @(i == Model.CurrentPage ? "bg-primary-600 text-white" : "bg-white text-gray-700 hover:bg-gray-50") text-sm font-medium">
                                                    @i
                                                </a>
                                            }
                                            
                                            @if (Model.HasNextPage)
                                            {
                                                <a href="@Url.Action("Catalog", new { query = Model.SearchQuery, category = Model.SelectedCategory, page = Model.CurrentPage + 1 })" 
                                                   class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                                    <span class="sr-only">Next</span>
                                                    <i class="fas fa-chevron-right h-5 w-5"></i>
                                                </a>
                                            }
                                        </nav>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


<!-- Help and Support Section -->
<section class="bg-gray-100 py-10">
    <div class="max-w-9xl mx-auto px-2 sm:px-4 lg:px-8">
        <div class="text-center">
            <h2 class="text-3xl font-extrabold text-gray-900">Need Help Finding Resources?</h2>
            <p class="mt-4 max-w-2xl mx-auto text-lg text-gray-500">
                Our librarians are here to assist you with your academic research
            </p>
        </div>
        
        <div class="mt-12 grid grid-cols-1 gap-2 sm:grid-cols-2 lg:grid-cols-3">
            <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                <div class="px-6 py-8">
                    <div class="flex items-center justify-center h-12 w-12 rounded-md bg-primary-600 text-white mb-5">
                        <i class="fas fa-user-friends text-xl"></i>
                    </div>
                    <h3 class="text-lg font-medium text-gray-900">Ask a Librarian</h3>
                    <p class="mt-2 text-base text-gray-500">
                        Get personalized assistance from our expert librarians for your research needs.
                    </p>
                    <div class="mt-5">
                        <a href="#" class="text-primary-600 hover:text-primary-800 font-medium flex items-center">
                            Contact Now <i class="fas fa-arrow-right ml-2"></i>
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                <div class="px-6 py-8">
                    <div class="flex items-center justify-center h-12 w-12 rounded-md bg-primary-600 text-white mb-5">
                        <i class="fas fa-chalkboard-teacher text-xl"></i>
                    </div>
                    <h3 class="text-lg font-medium text-gray-900">Research Workshops</h3>
                    <p class="mt-2 text-base text-gray-500">
                        Join our workshops to learn advanced research skills and database searching techniques.
                    </p>
                    <div class="mt-5">
                        <a href="#" class="text-primary-600 hover:text-primary-800 font-medium flex items-center">
                            View Schedule <i class="fas fa-arrow-right ml-2"></i>
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="bg-white shadow-lg rounded-lg overflow-hidden">
                <div class="px-6 py-8">
                    <div class="flex items-center justify-center h-12 w-12 rounded-md bg-primary-600 text-white mb-5">
                        <i class="fas fa-book-open text-xl"></i>
                    </div>
                    <h3 class="text-lg font-medium text-gray-900">Course Reserves</h3>
                    <p class="mt-2 text-base text-gray-500">
                        Find textbooks and course materials selected by your professors for specific courses.
                    </p>
                    <div class="mt-5">
                        <a href="#" class="text-primary-600 hover:text-primary-800 font-medium flex items-center">
                            Browse Reserves <i class="fas fa-arrow-right ml-2"></i>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Custom Style to hide scrollbar but maintain functionality -->
<style>
    .scrollbar-hide {
        -ms-overflow-style: none;  /* IE and Edge */
        scrollbar-width: none;  /* Firefox */
    }
    .scrollbar-hide::-webkit-scrollbar {
        display: none;  /* Chrome, Safari, Opera */
    }
    
    /* Additional animation for cards */
    .hover\:scale-105:hover {
        transform: scale(1.05);
        z-index: 10;
        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    }
    
    /* Line clamp utility */
    .line-clamp-1 {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 1;
    }
    
    .line-clamp-2 {
        overflow: hidden;
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
        const advancedToggle = document.getElementById('advancedToggle');
        const toggleIcon = document.getElementById('toggleIcon');
        const searchInput = document.querySelector('input[name="query"]');
        const searchClear = document.getElementById('searchClear');
        
        
        // Search clear button
        if (searchClear) {
            searchClear.addEventListener('click', function() {
                searchInput.value = '';
                searchClear.classList.add('hidden');
                searchInput.focus();
            });
            
            searchInput.addEventListener('input', function() {
                if (this.value.length > 0) {
                    searchClear.classList.remove('hidden');
                } else {
                    searchClear.classList.add('hidden');
                }
            });
        }
        
        // Add focus animation to search input
        searchInput.addEventListener('focus', function() {
            this.parentElement.parentElement.parentElement.classList.add('ring-2', 'ring-primary-400');
        });
        
        searchInput.addEventListener('blur', function() {
            this.parentElement.parentElement.parentElement.classList.remove('ring-2', 'ring-primary-400');
        });
    });
    </script>
    }